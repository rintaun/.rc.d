" filesystem management
    set nowb       " do not create filename~ backups
    set noswapfile " do not use .filename.swp/swo swap files

" code style preferences
    set smartindent  " have VIM auto-indent when possible
    set tabstop=4    " tabs are 4 characters wide by default for most code
    set shiftwidth=4 " indent level is also 4 characters wide by default
    set expandtab    " expand tabs to spaces when I push the tab key
    set nopaste      " do not assume paste mode by default

" remap ]], [[, [], and ][ to find block edges without C-style blocking
    " Filched from vim help, see :help object-motions
    map [[ ?{<CR>w99[{
    map ][ /}<CR>b00]}
    map ]] j0[[%/{<CR>
    map [] k$][%?}<CR>

" syntax highlighting
    set       t_Co=256 " 256-color terminal
    syntax    enable   " enable highlighting
    " some custom colors
    set background=dark
    highlight comment  ctermbg=24 ctermfg=235
    highlight constant ctermfg=red
    " add overflow column warning coloring
    if exists('+colorcolumn')
        set colorcolumn=79
    else
        au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>79.\+', -1)
    endif
    " set text width manually, cause colorcolumn sets it to that
    set textwidth=78
    " special case textwidth for git commit messages
    autocmd FileType gitcommit set textwidth=72

" grab the contents of the visual selection
" thanks to http://stackoverflow.com/a/6271254
    function! VS()
        let [lnum1, col1] = getpos("'<")[1:2]
        let [lnum2, col2] = getpos("'>")[1:2]
        let lines = getline(lnum1, lnum2)
        let lines[-1] = lines[-1][: col2 - 2]
        let lines[0] = lines[0][col1 - 1:]
        return join(lines, "\n")
    endfunction

" send commands using posgres using shift-r
" idea from Depesz, http://postgr.es/p/1DH
" slightly modified to dump into register r instead of the buffer
    vmap R :\|let @r = system('psql -t', VS())<enter>

" learn vim the hard way - disable arrow movement
    inoremap <Up>    <NOP>
    inoremap <Down>  <NOP>
    inoremap <Left>  <NOP>
    inoremap <Right> <NOP>
    noremap  <Up>    <NOP>
    noremap  <Down>  <NOP>
    noremap  <Left>  <NOP>
    noremap  <Right> <NOP>

" PLUGIN - vundle
    " NOTES
    "   This requires pre-cloning of the git repository, eg:
    "   $ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
    " required settings for vundle
    set      nocompatible
    filetype off
    set      rtp+=~/.vim/bundle/vundle
    call     vundle#rc()
    " have vundle manage vundle
    Bundle "gmarik/vundle"

" PLUGIN - powerline
    execute 'source '.fnameescape($XDG_CONFIG_HOME.'/lib/powerline/powerline/ext/vim/source_plugin.vim')
" NOTES
    "    For this to look decent on Mac OS X, you need to download a Powerline
    "    patched font and enable it, or build your own. I use "Menlo" patched
    "    from https://gist.github.com/1595572.
    " install powerline
    "Bundle "Lokaltog/vim-powerline"
    set laststatus=2                  " turn on statusbar
    "let g:Powerline_symbols = 'fancy' " use fancy utf-8 symbols

" PLUGIN - vim-fugitive
    Bundle "tpope/vim-fugitive"

" PLUGIN - vim-markdown
    Bundle "tpope/vim-markdown"

" PLUGIN - NERDTree
    Bundle "scrooloose/nerdtree"

" PLUGIN - undo-tree
    Bundle "mbbill/undotree"

" PLUGIN - puppet-syntax-vim
    Bundle "puppetlabs/puppet-syntax-vim"

" PLUGIN - vim-indent-guides
    Bundle "nathanaelkane/vim-indent-guides"
    " prevent errors from cropping up
    hi Normal ctermbg=black
    let g:indent_guides_start_level = 2 " no clue
    let g:indent_guides_guide_size  = 1 " no fat guides
    let g:indent_guides_auto_colors = 0 " skip auto-color decisions
    " make some pretty colors
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=235
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=236
    " turn it on by default
    autocmd VimEnter * :IndentGuidesEnable

" post-vundle-install required setting
    filetype plugin indent on
